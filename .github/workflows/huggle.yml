name: huggle

on:
  push:
  pull_request:

jobs:
  build-linux:
    name: Linux
    runs-on: ubuntu-${{ matrix.ubuntu-version }}
    env:
      QTTYPE: 5
    strategy:
      fail-fast: false
      matrix:
        ubuntu-version: [18.04, 20.04]
        qt-version: [5.12.10, 5.15.2]
    steps:
      - uses: actions/checkout@v2
      - uses: jurplel/install-qt-action@v4
        with:
          version: ${{ matrix.qt-version }}
          modules: 'qtwebengine'
      - run: travis/before_script.sh
      - run: travis/script.sh

  build-macos:
    name: macOS
    runs-on: macos-latest
    env:
      QTTYPE: 5
    strategy:
      fail-fast: false
      matrix:
        # Note Qt 5 doesn't ship x86 so it will fail on ARM runner
        qt-version: [6.5.3]
    steps:
      - uses: jurplel/install-qt-action@v4
        with:
          version: ${{ matrix.qt-version }}
          modules: 'qtwebengine'
          # Make CMake see Qt6
      - name: Set up Qt6 env for CMake
        shell: bash
        run: |
          QT_PREFIX="${Qt6_DIR%/lib/cmake/Qt6}"
          echo "CMAKE_PREFIX_PATH=$QT_PREFIX" >> "$GITHUB_ENV"
          echo "$QT_PREFIX/bin" >> "$GITHUB_PATH"
          # Optional but helpful:
          echo "QT_HOST_PATH=$QT_PREFIX" >> "$GITHUB_ENV"
          echo "QT_PLUGIN_PATH=$QT_PREFIX/plugins" >> "$GITHUB_ENV"
          echo "QML2_IMPORT_PATH=$QT_PREFIX/qml" >> "$GITHUB_ENV"
      - uses: actions/checkout@v4
      - run: travis/before_install_osx.sh
      - run: travis/before_script_osx.sh
      - run: travis/script_osx.sh

  build-windows:
    name: Windows
    runs-on: windows-${{ matrix.windows-version }}
    env:
      QTTYPE: 5
    strategy:
      fail-fast: false
      matrix:
        windows-version: [2022]
        qt-version: [5.12.10, 5.15.2]
    steps:
      - name: checkout code
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - uses: jurplel/install-qt-action@v4
        with:
          version: ${{ matrix.qt-version }}
          modules: 'qtwebengine'
      - uses: microsoft/setup-msbuild@v1.0.2
      - name: run build script
        shell: pwsh
        working-directory: ./windows64
        run: |
          $msbuildpath = vswhere -latest -requires Microsoft.Component.MSBuild -find MSBuild\**\Bin\MSBuild.exe | select-object -first 1
          if ($path) {
          & $path $args
          }
          # Qt5_DIR points to ...\lib\cmake\Qt5 â€“ go up 3 levels to get the Qt root
          $QtRoot = Split-Path $env:Qt5_DIR -Parent -Parent -Parent
          ./github_actions.ps1 -msbuild_path $msbuildpath -qt5_path $QtRoot
